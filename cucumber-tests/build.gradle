configurations {
    cucumberRuntime {
        extendsFrom testRuntime
    }
}

def cucumberArgs = ['--plugin', 'pretty', '--glue', 'com.lebedev', 'src/test/resources', '--tags', 'not @ignore'];

task smoke() {
    doFirst {
        cucumberArgs.addAll("--tags", "@smoke");
    }
}

task criticalPath() {
    doFirst {
        cucumberArgs.addAll("--tags", "@criticalPath");
    }
}

task single() {
    doFirst {
        cucumberArgs.addAll("--tags", project.getProperties().get("tags").toString());
    }
}

task generateProperties() {
    doFirst {
        Properties props = new Properties()
        File propsFile = new File(project.buildDir.getAbsolutePath() + "/classes/java/test/test.properties")
        props.setProperty('driver', 'chrome')
        props.setProperty('domain', 'http://www.google.com')
        props.setProperty('chrome.downloads', 'C:/Selenium')
        props.setProperty('drivers.folder', 'C:/Selenium')
        props.setProperty('path', getRootProject().project(':data').getProjectDir().getAbsolutePath() + "\\src\\main\\resources")
        def writer = new FileWriter(propsFile);

        try {
            props.store(writer, 'Some comment')
            writer.flush()
        } finally {
            writer.close()
        }
    }
}

task cucumber() {
    dependsOn assemble, compileTestJava, generateProperties
    doLast {
        javaexec {
            main = "cucumber.api.cli.Main"
            classpath = configurations.cucumberRuntime + sourceSets.main.output + sourceSets.test.output;
            args = cucumberArgs
        }
    }
}

dependencies {
    testCompile 'io.cucumber:cucumber-java:2.3.1'
    testCompile 'io.cucumber:cucumber-junit:2.3.1'
    compile "org.aeonbits.owner:owner-java8:1.0.9"

    testCompile project(':utils')
    testCompile project(':page-objects')
    testCompile project(':api')
    testCompile project(':data')
}